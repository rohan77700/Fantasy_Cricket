# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fantasy.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
conn = sqlite3.connect('cricket.db')

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(30, 50, 931, 101))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.e1 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.e1.setFont(font)
        self.e1.setStyleSheet("color:blue;")
        self.e1.setText("")
        self.e1.setObjectName("e1")
        self.horizontalLayout.addWidget(self.e1)
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.e2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.e2.setFont(font)
        self.e2.setStyleSheet("color:blue;")
        self.e2.setText("")
        self.e2.setObjectName("e2")
        self.horizontalLayout.addWidget(self.e2)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.e3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.e3.setFont(font)
        self.e3.setStyleSheet("color:blue;")
        self.e3.setText("")
        self.e3.setObjectName("e3")
        self.horizontalLayout.addWidget(self.e3)
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout.addWidget(self.label_4)
        self.e4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.e4.setFont(font)
        self.e4.setStyleSheet("color:blue;")
        self.e4.setText("")
        self.e4.setObjectName("e4")
        self.horizontalLayout.addWidget(self.e4)
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(50, 210, 401, 491))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.rbtn2 = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.rbtn2.setFont(font)
        self.rbtn2.setObjectName("rbtn2")
        self.gridLayout.addWidget(self.rbtn2, 0, 1, 1, 1)
        self.rbtn4 = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.rbtn4.setFont(font)
        self.rbtn4.setObjectName("rbtn4")
        self.gridLayout.addWidget(self.rbtn4, 0, 3, 1, 1)
        self.rbtn1 = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.rbtn1.setFont(font)
        self.rbtn1.setObjectName("rbtn1")
        self.gridLayout.addWidget(self.rbtn1, 0, 0, 1, 1)
        self.rbtn3 = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.rbtn3.setFont(font)
        self.rbtn3.setObjectName("rbtn3")
        self.gridLayout.addWidget(self.rbtn3, 0, 2, 1, 1)
        
        self.rbtn1.toggled.connect(self.ctg)
        self.rbtn2.toggled.connect(self.ctg)
        self.rbtn3.toggled.connect(self.ctg)
        self.rbtn4.toggled.connect(self.ctg)

        self.list1 = QtWidgets.QListWidget(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.list1.setFont(font)
        self.list1.setStyleSheet("font: 10pt \"Comic Sans MS\";\n"
"color:blue;")
        self.list1.setObjectName("list1")
        self.gridLayout.addWidget(self.list1, 1, 0, 1, 4)
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(540, 250, 401, 451))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.list2 = QtWidgets.QListWidget(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.list2.setFont(font)
        self.list2.setStyleSheet("font: 10pt \"Comic Sans MS\";\n"
"color:blue;")
        self.list2.setObjectName("list2")
        self.gridLayout_2.addWidget(self.list2, 1, 0, 1, 1)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(50, 150, 401, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_9 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_6.addWidget(self.label_9)
        self.pts1 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.pts1.setFont(font)
        self.pts1.setStyleSheet("color:blue;")
        self.pts1.setText("")
        self.pts1.setObjectName("pts1")
        self.horizontalLayout_6.addWidget(self.pts1)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(540, 150, 401, 41))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_13 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_7.addWidget(self.label_13)
        self.pts2 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.pts2.setFont(font)
        self.pts2.setStyleSheet("color:blue;")
        self.pts2.setText("")
        self.pts2.setObjectName("pts2")
        self.horizontalLayout_7.addWidget(self.pts2)
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(540, 210, 401, 41))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_19 = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.horizontalLayout_9.addWidget(self.label_19)
        self.tn = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setBold(True)
        font.setWeight(75)
        self.tn.setFont(font)
        self.tn.setStyleSheet("color:blue;")
        self.tn.setText("")
        self.tn.setObjectName("tn")
        self.horizontalLayout_9.addWidget(self.tn)
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(50, 20, 171, 23))
        self.label_21.setStyleSheet("font: 10pt \"Comic Sans MS\";\n"
"color: gray;")
        self.label_21.setObjectName("label_21")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 31))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.menuManage_Teams.setFont(font)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNEW_Team = QtWidgets.QAction(MainWindow)
        self.actionNEW_Team.setObjectName("actionNEW_Team")
        self.actionOPEN_Team = QtWidgets.QAction(MainWindow)
        self.actionOPEN_Team.setObjectName("actionOPEN_Team")
        self.actionSAVE_Team = QtWidgets.QAction(MainWindow)
        self.actionSAVE_Team.setObjectName("actionSAVE_Team")
        self.actionEVALUATE_Team = QtWidgets.QAction(MainWindow)
        self.actionEVALUATE_Team.setObjectName("actionEVALUATE_Team")
        self.menuManage_Teams.addAction(self.actionNEW_Team)
        self.menuManage_Teams.addAction(self.actionOPEN_Team)
        self.menuManage_Teams.addAction(self.actionSAVE_Team)
        self.menuManage_Teams.addAction(self.actionEVALUATE_Team)
        self.menubar.addAction(self.menuManage_Teams.menuAction())

        self.list1.itemDoubleClicked.connect(self.removelist1)
        self.list2.itemDoubleClicked.connect(self.removelist2)

        self.menuManage_Teams.triggered[QtWidgets.QAction].connect(self.menu)

        self.bat=0
        self.bwl=0
        self.ar=0
        self.wk=0
        self.avl=1000
        self.used=0

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Fantasy Cricket"))
        self.label.setText(_translate("MainWindow", "Batsmen (BAT)"))
        self.label_2.setText(_translate("MainWindow", "Bowlers (BOW)"))
        self.label_3.setText(_translate("MainWindow", "Allrounders (AR)"))
        self.label_4.setText(_translate("MainWindow", "Wicket-keeper (WK)"))
        self.rbtn2.setText(_translate("MainWindow", "BOW"))
        self.rbtn4.setText(_translate("MainWindow", "WK"))
        self.rbtn1.setText(_translate("MainWindow", "BAT"))
        self.rbtn3.setText(_translate("MainWindow", "AR"))
        self.label_9.setText(_translate("MainWindow", "Points Available"))
        self.label_13.setText(_translate("MainWindow", "Points Used"))
        self.label_19.setText(_translate("MainWindow", "Team Name"))
        self.label_21.setText(_translate("MainWindow", "Your Selections"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNEW_Team.setText(_translate("MainWindow", "NEW Team"))
        self.actionNEW_Team.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOPEN_Team.setText(_translate("MainWindow", "OPEN Team"))
        self.actionOPEN_Team.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSAVE_Team.setText(_translate("MainWindow", "SAVE Team"))
        self.actionSAVE_Team.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionEVALUATE_Team.setText(_translate("MainWindow", "EVALUATE Team"))
        self.actionEVALUATE_Team.setShortcut(_translate("MainWindow", "Ctrl+E"))

    def menu(self,action):
        txt=(action.text())
    
        if txt=='NEW Team':
            self.bat=0
            self.bwl=0
            self.ar=0
            self.wk=0
            self.avl=1000
            self.used=0
            self.list1.clear()
            self.list2.clear()
            text, ok=QtWidgets.QInputDialog.getText(MainWindow, "Fantasy Cricket", "Enter Name of Team:")
            if ok:
                self.tn.setText(str(text))
            self.show()


        if txt=='SAVE Team':
            count=self.list2.count()
            selected=""
            for i in range(count):
                selected+=self.list2.item(i).text()
                if i<count:
                    selected+=","
            self.saveteam(self.tn.text(),selected,self.used)

        if txt=='OPEN Team':
            self.bat=0
            self.bwl=0
            self.ar=0
            self.wk=0
            self.avl=1000
            self.used=0
            self.list1.clear()
            self.list2.clear()
            self.show()
            self.openteam()


        if txt=='EVALUATE Team':
            from evaluate import Ui_Dialog
            Dialog = QtWidgets.QDialog()
            ui = Ui_Dialog()
            ui.setupUi(Dialog)
            ret=Dialog.exec()

    def show(self):
        self.e1.setText(str(self.bat))
        self.e2.setText(str(self.bwl))
        self.e3.setText(str(self.ar))
        self.e4.setText(str(self.wk))
        self.pts1.setText(str(self.avl))
        self.pts2.setText(str(self.used))

    def criteria(self,ctgr,item):
        msg=''
        if ctgr=="BAT" and self.bat>=4:msg="Batsmen not more than 4"
        if ctgr=="BWL" and self.bwl>=3:msg="Bowlers not more than 3"
        if ctgr=="AR" and self.ar>=3:msg="Allrounders not more than 3"
        if ctgr=="WK" and self.wk>=1:msg="Wicketkeepers not more than 1"
        if msg!='':
            self.showdlg(msg)
            return False
        if self.avl<=0:
            msg="Points has been Exhausted!"
            self.showdlg(msg)
            return False 
        if ctgr=="BAT":self.bat+=1
        if ctgr=="BWL":self.bwl+=1
        if ctgr=="AR":self.ar+=1
        if ctgr=="WK":self.wk+=1   
        sql="SELECT value from stats where player='"+item.text()+"'"
        cur=conn.execute(sql)
        row=cur.fetchone()
        self.avl-=int(row[0])
        self.used+=int(row[0])
        return True
    
    def removelist1(self,item):  
        ctgr=''
        if self.rbtn1.isChecked()==True:ctgr='BAT'
        if self.rbtn2.isChecked()==True:ctgr='BWL'
        if self.rbtn3.isChecked()==True:ctgr='AR'
        if self.rbtn4.isChecked()==True:ctgr='WK'
        ret=self.criteria(ctgr,item)       
        if ret==True:
            self.list1.takeItem(self.list1.row(item))
            self.list2.addItem(item.text())
            self.show()

    def ctg(self):
        ctgr=''
        if self.rbtn1.isChecked()==True:ctgr='BAT'
        if self.rbtn2.isChecked()==True:ctgr='BWL'
        if self.rbtn3.isChecked()==True:ctgr='AR'
        if self.rbtn4.isChecked()==True:ctgr='WK'
        self.fillList(ctgr)

    def removelist2(self,item):
        self.list2.takeItem(self.list2.row(item))
        cursor = conn.execute("SELECT player,value, ctg from stats where player='"+item.text()+"'")
        row=cursor.fetchone()
        self.avl=self.avl+int(row[1])
        self.used=self.used-int(row[1])
        ctgr=row[2]
        if ctgr=="BAT":
            self.bat-=1
            if self.rbtn1.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="BWL":
            self.bwl-=1
            if self.rbtn2.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="AR":
            self.ar-=1
            if self.rbtn3.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="WK":
            self.wk-=1
            if self.rbtn4.isChecked()==True:self.list1.addItem(item.text())
        self.show()

    def fillList(self,ctgr):
        if self.tn.text()=='':
            self.showdlg("Enter Team Name!")
            return 
        self.list1.clear()
        sql="SELECT player from stats where ctg='"+ctgr+"';"
        cur=conn.execute(sql)
        for row in cur:
            selected=[]
            for i in range(self.list2.count()):
                selected.append(self.list2.item(i).text())
            if row[0] not in selected:self.list1.addItem(row[0])

    def openteam(self):
        sql="select name from teams;"
        cur=conn.execute(sql)
        teams=[]
        for row in cur:
            teams.append(row[0])
        team, ok=QtWidgets.QInputDialog.getItem(MainWindow,"Fantasy Cricket","Choose a Team",teams,0,False)
        if ok and team:
            self.tn.setText(team)
            
        sql1="SELECT players,value from teams where name='"+team+"';"
        cur=conn.execute(sql1)
        row=cur.fetchone()
        selected=row[0].split(',')
        self.list2.addItems(selected)
        self.used=row[1]
        self.avl=1000-row[1]
        count=self.list2.count()
        for i in range(count-1):
            ply=self.list2.item(i).text()
            sql="select ctg from stats where player='"+ply+"';" 
            cur=conn.execute(sql)
            row=cur.fetchone()
            ctgr=row[0]
            if ctgr=="BAT":self.bat+=1
            if ctgr=="BWL":self.bwl+=1
            if ctgr=="AR":self.ar+=1
            if ctgr=="WK":self.wk+=1  
        self.show()

    def saveteam(self,nm,ply,val):
        if self.bat+self.bwl+self.ar+self.wk!=11:
            self.showdlg("Insufficient Players!")
            return

        sql="INSERT INTO teams (name,players,value) VALUES ('"+nm+"','"+ply+"','"+str(val)+"');"
        try:
            cur=conn.execute(sql)
            self.showdlg("Team Saved Succesfully!")
            conn.commit()
        except:
            self.showdlg("Error in Operation!")
            conn.rollback()
            
    def showdlg(self,msg):
        Dialog=QtWidgets.QMessageBox()
        Dialog.setText(msg)
        Dialog.setWindowTitle("Fantasy Cricket")
        ret=Dialog.exec()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
